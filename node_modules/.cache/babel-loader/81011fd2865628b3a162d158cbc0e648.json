{"ast":null,"code":"import _slicedToArray from \"/home/mayada/WebstormProjects/music/music-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayada/WebstormProjects/music/music-front/src/components/home-page/home-page.js\";\nimport React from \"react\";\nimport './home-page.css';\nimport MusicTable from \"../music-table/music-table\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport * as config from '../../configs/development';\nimport * as songConfigs from '../../configs/dropdowns';\nconst flightsTypes = {\n  departures: 'departures',\n  arrivals: 'arrivals'\n};\n\nfunction HomePage() {\n  const isAuthorized = !!localStorage.getItem('auth-token');\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        songs = _useState2[0],\n        setSongs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isDialogOpen = _useState4[0],\n        setIsDialogOpen = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        setTitle = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        artist = _useState8[0],\n        setArtist = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        album = _useState10[0],\n        setAlbum = _useState10[1];\n\n  const _useState11 = useState(songConfigs.genres[0]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        genre = _useState12[0],\n        setGenre = _useState12[1];\n\n  const fetchSongs = () => {\n    axios.get(config.api.baseUrl + 'table/songs').then(res => setSongs(res.data)).catch(err => console.log(err));\n  };\n\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleArtistChange = event => {\n    setArtist(event.target.value);\n  };\n\n  const handleAlbumChange = event => {\n    setAlbum(event.target.value);\n  };\n\n  const handleGenreChange = event => {\n    setGenre(event.target.value);\n  };\n\n  const handleSongsUpdate = updatedSongs => {\n    setSongs(updatedSongs);\n  };\n\n  const saveSong = () => {\n    const song = {\n      title: title,\n      artist: artist,\n      album: album,\n      genre: genre\n    };\n    axios.post(config.api.baseUrl + 'table/song', {\n      body: song\n    }).then(result => {\n      song._id = result.data;\n      setSongs([...songs, song]);\n      setIsDialogOpen(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchSongs(flightsTypes.departures);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(MusicTable, {\n    tableData: songs,\n    songsUpdateHandler: handleSongsUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    style: isAuthorized ? {} : {\n      display: 'none',\n      color: \"#ae3d63\"\n    },\n    className: \"fab\",\n    color: \"primary\",\n    \"aria-label\": \"edit\",\n    onClick: openDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: isDialogOpen,\n    onClose: closeDialog,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Subscribe\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"To add a new song, please enter full song information in fields below and press \\\"SAVE\\\"\"), React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    label: \"Title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Artist\",\n    onChange: handleArtistChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Album\",\n    onChange: handleAlbumChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    className: \"inputLabel\",\n    id: \"genre-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Genre\"), React.createElement(Select, {\n    labelId: \"genre-label\",\n    id: \"genre\",\n    value: genre,\n    fullWidth: true,\n    onChange: handleGenreChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, songConfigs.genres.map(option => React.createElement(MenuItem, {\n    key: option,\n    value: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, option)))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: closeDialog,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: saveSong,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/mayada/WebstormProjects/music/music-front/src/components/home-page/home-page.js"],"names":["React","MusicTable","useEffect","useState","axios","Fab","AddIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","MenuItem","Select","InputLabel","config","songConfigs","flightsTypes","departures","arrivals","HomePage","isAuthorized","localStorage","getItem","songs","setSongs","isDialogOpen","setIsDialogOpen","title","setTitle","artist","setArtist","album","setAlbum","genres","genre","setGenre","fetchSongs","get","api","baseUrl","then","res","data","catch","err","console","log","openDialog","closeDialog","handleTitleChange","event","target","value","handleArtistChange","handleAlbumChange","handleGenreChange","handleSongsUpdate","updatedSongs","saveSong","song","post","body","result","_id","display","color","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './home-page.css';\nimport MusicTable from \"../music-table/music-table\";\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport * as config from '../../configs/development';\nimport * as songConfigs from '../../configs/dropdowns';\n\n\nconst flightsTypes = {\n    departures: 'departures',\n    arrivals: 'arrivals'\n};\n\nfunction HomePage() {\n\n    const isAuthorized = !!localStorage.getItem('auth-token');\n\n    const [songs, setSongs] = useState([]);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n    const [title, setTitle] = useState('');\n    const [artist, setArtist] = useState('');\n    const [album, setAlbum] = useState('');\n    const [genre, setGenre] = useState(songConfigs.genres[0]);\n\n    const fetchSongs = () => {\n        axios.get(config.api.baseUrl + 'table/songs')\n            .then(res => setSongs(res.data))\n            .catch(err => console.log(err));\n    };\n\n    const openDialog = () => {\n        setIsDialogOpen(true);\n    };\n\n    const closeDialog = () => {\n        setIsDialogOpen(false);\n    };\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const handleArtistChange = (event) => {\n        setArtist(event.target.value);\n    };\n\n    const handleAlbumChange = (event) => {\n        setAlbum(event.target.value);\n    };\n\n    const handleGenreChange = (event) => {\n        setGenre(event.target.value);\n    };\n\n    const handleSongsUpdate = (updatedSongs) => {\n        setSongs(updatedSongs);\n    };\n\n    const saveSong = () => {\n        const song = {\n            title: title,\n            artist: artist,\n            album: album,\n            genre: genre\n        };\n\n        axios.post(config.api.baseUrl + 'table/song', {body: song})\n            .then(result => {\n                song._id = result.data;\n                setSongs([...songs, song]);\n                setIsDialogOpen(false);\n            });\n\n    };\n\n\n    useEffect(() => {\n        fetchSongs(flightsTypes.departures);\n    }, []);\n\n    return (\n        <div>\n            <MusicTable tableData={songs} songsUpdateHandler={handleSongsUpdate} />\n\n            <Fab style={isAuthorized ? {} : {display: 'none', color: \"#ae3d63\"}}\n                 className=\"fab\" color=\"primary\" aria-label=\"edit\" onClick={openDialog}>\n                <AddIcon/>\n            </Fab>\n\n            <Dialog open={isDialogOpen} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To add a new song, please enter full song information in fields below and press \"SAVE\"\n                    </DialogContentText>\n\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        label=\"Title\"\n                        onChange={handleTitleChange}/>\n\n                    <TextField\n                        fullWidth\n                        label=\"Artist\"\n                        onChange={handleArtistChange}/>\n\n                    <TextField\n                        fullWidth\n                        label=\"Album\"\n                        onChange={handleAlbumChange}/>\n\n                    <InputLabel className=\"inputLabel\" id=\"genre-label\">Genre</InputLabel>\n                    <Select\n                        labelId=\"genre-label\"\n                        id=\"genre\"\n                        value={genre}\n                        fullWidth\n                        onChange={handleGenreChange}\n                    >\n                        {songConfigs.genres.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>\n                        ))}\n                    </Select>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\" onClick={saveSong} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}